name: Pictive Posts API Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'Pictive-Posts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Pictive-Posts/**'
  workflow_dispatch:  # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/pictive-posts
  MONGODB_URI: mongodb://localhost:27017/posts
  PORT: 3001

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: posts

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'post-api/package-lock.json'

      - name: Install dependencies
        working-directory: post-api
        run: npm install

      - name: Run tests
        working-directory: post-api
        run: npm run test

      - name: Build application
        working-directory: post-api
        run: npm run build

  deploy:
    name: Deploy
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y docker docker-engine docker.io containerd runc
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker

      - name: Build Docker image
        working-directory: post-api
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          docker build -t $REGISTRY/$IMAGE_NAME:latest .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify Kubernetes configuration
        run: |
          # This step will be enabled when you have your kubeconfig
          # kubectl get nodes
          echo "Kubernetes configuration verification will be enabled when kubeconfig is available"
          echo "Please add your kubeconfig as a secret named KUBE_CONFIG when ready to deploy"

      - name: Verify deployment files
        run: |
          # Verify that all required Kubernetes manifests exist
          if [ -d "k8s" ]; then
            echo "Found k8s directory"
            ls -la k8s/
          else
            echo "Warning: k8s directory not found"
          fi 